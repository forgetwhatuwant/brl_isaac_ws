global_costmap:
  global_frame: map               # 全局坐标系，通常是 'map'。
  robot_base_frame: base_link     # 机器人坐标系，通常是 'base_link'。
  update_frequency: 5.0             # 全局代价地图的更新频率 (Hz)。
  publish_frequency: 2.0            # 发布代价地图话题的频率 (Hz)。
  transform_tolerance: 0.5          # TF（坐标变换）的容忍时间 (秒)，用于允许一定的延迟。
  resolution: 0.05                  # 地图分辨率 (米/像素)，数值越小地图越精细。
  rolling_window: false             # 是否开启滚动窗口模式（全局地图固定大小时为 false）。
  width: 300.0                       # 代价地图的宽度（米），如果 rolling_window 为 true 需指定。
  height: 300.0                      # 代价地图的高度（米），如果 rolling_window 为 true 需指定。
  origin_x: 0.0                     # 地图的原点位置 (X 轴)。
  origin_y: 0.0                   # 地图的原点位置 (Y 轴)。
  static_map: true                 # 是否使用静态地图（true 表示从 `/map` 话题获取）。
  map_type: "costmap"               # 地图类型，可以为 costmap 或 voxel（体素图）。

  plugins:                          # 插件列表，用于定义代价地图的插件（如障碍物层、膨胀层等）。
    - {name: static_layer, type: "costmap_2d::StaticLayer"}   # 静态地图层，加载静态地图。
    - {name: inflation_layer, type: "costmap_2d::InflationLayer"} # 膨胀层，用于给障碍物周围区域膨胀代价。
    - {name: obstacle_layer, type: "costmap_2d::ObstacleLayer"}   # 障碍物层，用于动态更新障碍物信息。

static_layer:                       # 静态地图层配置
  map_topic: "/map"                 # 静态地图话题，通常为 "/map"。
  subscribe_to_updates: true        # 是否订阅地图更新（当地图动态变化时有用）。

inflation_layer:                    # 膨胀层配置
  inflation_radius: 0.10            # 膨胀半径 (米)，障碍物周围多大的范围被增加代价。
  cost_scaling_factor: 5.0         # 膨胀代价的缩放因子，值越高，膨胀区域内的代价增长越快。

obstacle_layer:                     # 障碍物层配置
  obstacle_range: 2.5            # 障碍物感知范围 (米)。
  raytrace_range: 3.0               # 激光雷达扫描的射线追踪范围 (米)。
  observation_sources: laser_scan_sensor  # 障碍物观测来源（可以有多个传感器）。
  laser_scan_sensor:                # 激光雷达作为障碍物来源的配置
    data_type: LaserScan            # 数据类型，可以是 LaserScan 或 PointCloud。
    topic: scan                     # 激光雷达数据的 ROS 话题，通常为 "/scan"。
    marking: true                   # 是否将激光雷达探测到的物体标记为障碍物。
    clearing: true                  # 是否允许清除空旷区域中的障碍物（当障碍物消失时）。
    max_obstacle_height: 2.0        # 可以感知到的最大障碍物高度 (米)。
    min_obstacle_height: 0.0        # 可以感知到的最小障碍物高度 (米)。
    obstacle_range: 2.5             # 该传感器的障碍物感知范围 (米)。
    raytrace_range: 3.0             # 该传感器的射线追踪范围 (米)。